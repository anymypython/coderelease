# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-25 11:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=512, verbose_name='指令')),
                ('result', models.TextField(verbose_name='执行结果')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='Cron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='计划任务名称')),
                ('note', models.CharField(blank=True, max_length=256, null=True, verbose_name='计划描述')),
                ('time', models.CharField(max_length=64, verbose_name='计划任务执行的时间')),
                ('job', models.CharField(max_length=64, verbose_name='计划')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=64, verbose_name='主机名')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP地址')),
                ('type', models.CharField(choices=[('0', 'nginx'), ('1', 'other')], max_length=12, verbose_name='类型')),
                ('ssh_port', models.PositiveIntegerField(verbose_name='SSH端口号')),
                ('isAdmin', models.BooleanField(choices=[(0, '普通'), (1, '管理')], verbose_name='是否管理')),
                ('settings', models.CharField(choices=[('0', '开发'), ('1', '测试'), ('2', '准生产'), ('3', '生产')], default='0', max_length=20, verbose_name='环境')),
            ],
        ),
        migrations.CreateModel(
            name='HostIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('type', models.CharField(choices=[('0', '文件'), ('2', 'git')], max_length=20, verbose_name='更新类型')),
                ('status', models.CharField(choices=[('0', '等待更新'), ('1', '更新中'), ('2', '等待测试'), ('3', '测试通过'), ('4', '更新完成'), ('5', '更新失败'), ('6', '回滚成功')], default='0', max_length=20, verbose_name='更新状态')),
                ('backup', models.CharField(choices=[(0, '是'), (1, '否')], default=0, max_length=20, verbose_name='备份状态')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='release.Host', verbose_name='发布机器')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('status', models.CharField(choices=[('0', '等待更新'), ('1', '更新中'), ('2', '等待测试'), ('3', '测试通过'), ('4', '更新完成'), ('5', '更新失败'), ('6', '回滚成功')], max_length=12, verbose_name='发布状态')),
                ('backup', models.CharField(choices=[('0', 'yes'), ('1', 'no')], max_length=20, verbose_name='是否备份')),
                ('backup_dir', models.CharField(max_length=128, verbose_name='备份路径')),
                ('type', models.CharField(choices=[('0', '文件'), ('1', 'git')], max_length=12, verbose_name='更新类型')),
                ('src_path', models.CharField(blank=True, max_length=1024, null=True, verbose_name='上传文件路径')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_created=True, verbose_name='创建时间')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='项目名称')),
                ('path', models.CharField(max_length=200, verbose_name='项目目录')),
                ('git_repo', models.CharField(max_length=64, verbose_name='Git仓库')),
                ('note', models.TextField(blank=True, default=None, null=True, verbose_name='项目介绍')),
                ('Language', models.CharField(choices=[('0', 'Java'), ('1', 'python'), ('2', 'PHP'), ('3', 'HTML'), ('4', 'Go')], max_length=12, verbose_name='语言')),
                ('nginx_conf', models.TextField(blank=True, null=True, verbose_name='nginx配置')),
                ('nginxupstream', models.CharField(blank=True, max_length=200, null=True, verbose_name='nginx upstream名称')),
                ('domain_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='域名')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=200, verbose_name='url')),
                ('binfa', models.CharField(max_length=200, verbose_name='并发数')),
                ('num', models.CharField(max_length=2000, verbose_name='次数')),
                ('all_num', models.CharField(max_length=2000, verbose_name='完成总次数请求')),
                ('success_rate', models.CharField(max_length=2000, verbose_name='成功率')),
                ('alltime', models.CharField(max_length=2000, verbose_name='总用时')),
                ('data', models.CharField(max_length=2000, verbose_name='传输数据')),
                ('response', models.CharField(max_length=2000, verbose_name='响应时间')),
                ('rate', models.CharField(max_length=2000, verbose_name='平均每秒完成的请求')),
                ('throughput', models.CharField(max_length=2000, verbose_name='每秒传输的数据')),
                ('concurrent', models.CharField(max_length=2000, verbose_name='实际最高并发连接数')),
                ('successful', models.CharField(max_length=2000, verbose_name='成功次数')),
                ('failed', models.CharField(max_length=2000, verbose_name='失败次数')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='电子邮箱')),
                ('phone', models.BigIntegerField(unique=True, verbose_name='手机号码')),
                ('role', models.CharField(choices=[('0', '开发'), ('1', '测试'), ('2', '运维')], default='0', max_length=12, verbose_name='用户角色')),
                ('department', models.CharField(choices=[('0', '研发'), ('1', '测试'), ('2', '运维')], max_length=32, verbose_name='所属部门')),
                ('isAdmin', models.CharField(choices=[('0', 'Admin'), ('1', '普通')], default='1', max_length=10, verbose_name='管理员')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='dev',
            field=models.ManyToManyField(related_name='dev_user', to='release.UserProfile', verbose_name='研发人源'),
        ),
        migrations.AddField(
            model_name='project',
            name='host',
            field=models.ManyToManyField(related_name='pro', to='release.Host', verbose_name='使用主机'),
        ),
        migrations.AddField(
            model_name='project',
            name='nginx_host',
            field=models.ManyToManyField(related_name='nginx_hosts', to='release.Host', verbose_name='Nginx主机'),
        ),
        migrations.AddField(
            model_name='project',
            name='test',
            field=models.ManyToManyField(related_name='test_user', to='release.UserProfile', verbose_name='测试人员'),
        ),
        migrations.AddField(
            model_name='issue',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project', to='release.Project', verbose_name='项目名称'),
        ),
        migrations.AddField(
            model_name='issue',
            name='release_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='release.UserProfile', verbose_name='发布人'),
        ),
        migrations.AddField(
            model_name='hostissue',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='release.Issue', verbose_name='更新'),
        ),
        migrations.AddField(
            model_name='hostissue',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='release.Project', verbose_name='发布项目'),
        ),
        migrations.AddField(
            model_name='hostissue',
            name='user',
            field=models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='release.UserProfile', verbose_name='发布人'),
        ),
        migrations.AddField(
            model_name='cron',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='release.UserProfile', verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='cron',
            name='host',
            field=models.ManyToManyField(related_name='cron', to='release.Host'),
        ),
        migrations.AddField(
            model_name='command',
            name='hosts',
            field=models.ManyToManyField(to='release.Host', verbose_name='执行主机'),
        ),
        migrations.AddField(
            model_name='command',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='release.UserProfile', verbose_name='执行用户'),
        ),
    ]
